Search.setIndex({"alltitles": {"API Reference": [[0, null]], "CV+": [[12, "cv"]], "Classification Example": [[10, "classification-example"]], "Classification Examples": [[3, null]], "Classifier": [[0, "classifier"]], "Comparison between models with and without regularization": [[1, "comparison-between-models-with-and-without-regularization"]], "Comparison with CV+ and split conformal": [[12, "comparison-with-cv-and-split-conformal"]], "Comparison with Jackknife+-after-bootstrap and split conformal": [[2, "comparison-with-jackknife-after-bootstrap-and-split-conformal"]], "Conformal classification using CV+ in a Pipeline": [[2, null]], "Conformal regression using Jackknife+-after-bootstrap in a Pipeline": [[12, null]], "CoverForestClassifier": [[4, null]], "CoverForestRegressor": [[5, null]], "Evaluations": [[2, "evaluations"], [12, "evaluations"]], "Final notes": [[2, "final-notes"], [12, "final-notes"]], "Inspecting a difficult image": [[1, "inspecting-a-difficult-image"]], "Inspecting individual forest": [[2, "inspecting-individual-forest"]], "Inspecting individual tree": [[12, "inspecting-individual-tree"]], "Installation": [[10, "installation"]], "Jackknife+-after-bootstrap": [[2, "jackknife-after-bootstrap"]], "Key Features": [[10, "key-features"]], "Limiting the search space": [[1, "limiting-the-search-space"]], "Making a pipeline": [[2, "making-a-pipeline"], [12, "making-a-pipeline"]], "Making interval predictions": [[12, "making-interval-predictions"]], "Making set predictions": [[2, "making-set-predictions"]], "Performance Tips": [[10, "performance-tips"]], "Quick Start": [[10, "quick-start"]], "References": [[10, "references"]], "Regression Example": [[10, "regression-example"]], "Regression Examples": [[11, null]], "Regressor": [[0, "regressor"]], "Searching k and \\lambda using scikit-learn\u2019s GridSearchCV": [[1, null]], "Split conformal": [[2, "split-conformal"], [12, "split-conformal"]], "coverforest": [[10, null]], "coverforest.metrics.average_interval_length_loss": [[6, null]], "coverforest.metrics.average_set_size_loss": [[7, null]], "coverforest.metrics.classification_coverage_score": [[8, null]], "coverforest.metrics.regression_coverage_score": [[9, null]], "metrics": [[0, "metrics"]]}, "docnames": ["api", "classification/classification_gridsearch", "classification/classification_pipeline", "classification/index", "generated/coverforest.CoverForestClassifier", "generated/coverforest.CoverForestRegressor", "generated/coverforest.metrics.average_interval_length_loss", "generated/coverforest.metrics.average_set_size_loss", "generated/coverforest.metrics.classification_coverage_score", "generated/coverforest.metrics.regression_coverage_score", "index", "regression/index", "regression/regression_pipeline"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1, "sphinxcontrib.bibtex": 9}, "filenames": ["api.rst", "classification/classification_gridsearch.ipynb", "classification/classification_pipeline.ipynb", "classification/index.rst", "generated/coverforest.CoverForestClassifier.rst", "generated/coverforest.CoverForestRegressor.rst", "generated/coverforest.metrics.average_interval_length_loss.rst", "generated/coverforest.metrics.average_set_size_loss.rst", "generated/coverforest.metrics.classification_coverage_score.rst", "generated/coverforest.metrics.regression_coverage_score.rst", "index.rst", "regression/index.rst", "regression/regression_pipeline.ipynb"], "indexentries": {"average_interval_length_loss() (in module coverforest.metrics)": [[6, "coverforest.metrics.average_interval_length_loss", false]], "average_set_size_loss() (in module coverforest.metrics)": [[7, "coverforest.metrics.average_set_size_loss", false]], "classes_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.classes_", false]], "classification_coverage_score() (in module coverforest.metrics)": [[8, "coverforest.metrics.classification_coverage_score", false]], "coverforestclassifier (class in coverforest)": [[4, "coverforest.CoverForestClassifier", false]], "coverforestregressor (class in coverforest)": [[5, "coverforest.CoverForestRegressor", false]], "estimator_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.estimator_", false]], "estimator_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.estimator_", false]], "estimators_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.estimators_", false]], "estimators_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.estimators_", false]], "estimators_samples_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.estimators_samples_", false]], "estimators_samples_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.estimators_samples_", false]], "feature_importances_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.feature_importances_", false]], "feature_importances_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.feature_importances_", false]], "feature_names_in_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.feature_names_in_", false]], "feature_names_in_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.feature_names_in_", false]], "k_star_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.k_star_", false]], "lambda_star_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.lambda_star_", false]], "n_classes_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.n_classes_", false]], "n_features_in_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.n_features_in_", false]], "n_features_in_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.n_features_in_", false]], "n_outputs_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.n_outputs_", false]], "n_outputs_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.n_outputs_", false]], "oob_decision_function_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.oob_decision_function_", false]], "oob_pred_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.oob_pred_", false]], "oob_pred_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.oob_pred_", false]], "oob_prediction_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.oob_prediction_", false]], "oob_score_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.oob_score_", false]], "oob_score_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.oob_score_", false]], "regression_coverage_score() (in module coverforest.metrics)": [[9, "coverforest.metrics.regression_coverage_score", false]], "residuals_ (coverforest.coverforestregressor attribute)": [[5, "coverforest.CoverForestRegressor.residuals_", false]], "train_giqs_ (coverforest.coverforestclassifier attribute)": [[4, "coverforest.CoverForestClassifier.train_giqs_", false]]}, "objects": {"coverforest": [[4, 0, 1, "", "CoverForestClassifier"], [5, 0, 1, "", "CoverForestRegressor"]], "coverforest.CoverForestClassifier": [[4, 1, 1, "", "classes_"], [4, 1, 1, "", "estimator_"], [4, 1, 1, "", "estimators_"], [4, 1, 1, "", "estimators_samples_"], [4, 1, 1, "", "feature_importances_"], [4, 1, 1, "", "feature_names_in_"], [4, 1, 1, "", "k_star_"], [4, 1, 1, "", "lambda_star_"], [4, 1, 1, "", "n_classes_"], [4, 1, 1, "", "n_features_in_"], [4, 1, 1, "", "n_outputs_"], [4, 1, 1, "", "oob_decision_function_"], [4, 1, 1, "", "oob_pred_"], [4, 1, 1, "", "oob_score_"], [4, 1, 1, "", "train_giqs_"]], "coverforest.CoverForestRegressor": [[5, 1, 1, "", "estimator_"], [5, 1, 1, "", "estimators_"], [5, 1, 1, "", "estimators_samples_"], [5, 1, 1, "", "feature_importances_"], [5, 1, 1, "", "feature_names_in_"], [5, 1, 1, "", "n_features_in_"], [5, 1, 1, "", "n_outputs_"], [5, 1, 1, "", "oob_pred_"], [5, 1, 1, "", "oob_prediction_"], [5, 1, 1, "", "oob_score_"], [5, 1, 1, "", "residuals_"]], "coverforest.metrics": [[6, 2, 1, "", "average_interval_length_loss"], [7, 2, 1, "", "average_set_size_loss"], [8, 2, 1, "", "classification_coverage_score"], [9, 2, 1, "", "regression_coverage_score"]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:function"}, "terms": {"": [2, 3, 4, 5, 10, 12], "0": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "001": 1, "004": 1, "01": 1, "05": [1, 2, 10, 12], "1": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "10": [1, 2, 4, 5, 12], "100": [1, 2, 10], "105": 2, "105263157894737": 2, "1162135467": 2, "12": 12, "12034704": 5, "13": 5, "14530751": 5, "193": 12, "2": [1, 2, 4, 5, 6, 8, 9, 10, 12], "20": [2, 12], "200": [4, 5], "2001": [4, 5], "2018": [4, 5, 10], "2020": [2, 4, 5, 10, 12], "2021": [4, 5, 10], "2105263157894737": 2, "212": 12, "216": 12, "241": 1, "244edd7e85dc81602b7615cd705545f5": 2, "2b346a0aa375a07f5a90a344a61416c4": [2, 12], "3": [1, 4, 5, 6, 9, 10, 12], "32": [4, 5], "33": [2, 12], "333": 7, "3581": 2, "3591": 2, "37": [4, 5, 10], "3f": 1, "4": [1, 4, 5, 6, 10, 12], "400": [2, 12], "4138": [2, 12], "4149": [2, 12], "44": 5, "441365315": 12, "45": [4, 5], "486": [5, 10], "49": [5, 10], "5": [1, 4, 5, 6, 9, 10, 12], "50": 1, "507": [5, 10], "51": [4, 5, 10], "6": [2, 10, 12], "6140370279263": 12, "66": [8, 9], "7": 1, "73": 5, "77281674208146": 12, "8": [1, 12], "825": 12, "87496872": 5, "9": [1, 2, 10, 12], "90": [2, 12], "922": 1, "9276018099547512": 12, "95": [2, 10, 12], "9502262443438914": 12, "9547511312217195": 12, "970": 1, "9736842105263158": 2, "982": 2, "9824561403508771": 2, "A": [4, 5, 10], "As": [2, 12], "At": 2, "By": [4, 5], "For": [2, 4, 6, 7, 10, 12], "If": [2, 4, 5, 8, 9], "In": [1, 2, 4, 12], "It": [2, 4, 5, 10], "On": [2, 12], "The": [1, 2, 4, 5, 8, 9, 10, 12], "To": [1, 2, 4, 5, 12], "_": 1, "aaditya": 5, "about": 2, "abov": [2, 4, 5, 12], "absolut": 5, "absolute_error": 5, "access": 12, "accur": 12, "accuracy_scor": 4, "achiev": 5, "across": 2, "actual": [1, 2, 12], "ad": 2, "adapt": [2, 4, 10], "add": [4, 5], "addit": 2, "adjust": 4, "advanc": [2, 12], "after": [4, 5, 10, 11], "al": [2, 12], "alexand": [4, 5], "algorithm": [2, 12], "all": [1, 2, 4, 5, 10, 12], "all_forest": 2, "all_tre": 12, "allow": [2, 4], "allow_empty_set": [2, 4], "alpha": [1, 2, 4, 5, 10, 12], "alpha_default": [1, 4, 5], "also": [1, 2, 4, 5, 12], "altern": 5, "an": [0, 1, 2, 4, 5, 12], "anastasio": 4, "angelopoulo": [4, 10], "ani": [1, 4, 5], "ann": [5, 10], "anoth": [1, 2, 12], "another_clf": 1, "ap": [2, 4], "api": 10, "appli": [4, 5], "approach": 1, "ar": [1, 2, 4, 5, 8, 9, 12], "arang": 12, "argsort": 12, "arrai": [2, 4, 5, 6, 7, 8, 9, 12], "as_fram": [2, 12], "associ": [2, 4, 12], "attribut": [2, 4, 5, 12], "auto": [1, 2, 4], "automat": [2, 4, 12], "avail": [4, 5], "averag": [1, 2, 6, 7, 12], "average_interval_length_loss": 12, "average_set_size_loss": [1, 2], "average_set_size_scor": 1, "ax": [1, 2, 12], "axi": [2, 12], "b": [2, 10, 12], "bag": [2, 4, 5], "balanc": 4, "balanced_subsampl": 4, "balcan": [2, 12], "bar": [2, 12], "barber": [2, 4, 5, 10, 12], "base": [1, 4, 5], "batch": [2, 10, 12], "bate": [4, 10], "been": 2, "befor": [2, 4, 5, 12], "begin": 1, "below": [1, 12], "best": [1, 4, 5, 8, 9], "best_clf": 1, "best_estimator_": 1, "best_params_": 1, "best_score_": 1, "better": [2, 12], "between": [2, 6], "binari": [7, 8], "bincount": 4, "binomi": [2, 4, 5, 12], "blue": 12, "bool": [4, 5], "boostrap": 12, "bootstrap": [4, 5, 10, 11], "both": [2, 4, 5, 10, 12], "bound": [2, 6, 12], "branch": [4, 5], "breast": 2, "breiman": [4, 5], "brought": [4, 5], "build": [4, 5], "byol": [2, 4, 5, 12], "c": 10, "calcul": [2, 10, 12], "calibr": [4, 5], "call": [1, 4, 5], "callabl": [4, 5], "can": [1, 2, 4, 5, 10, 12], "cancer": 2, "cand": 2, "candid": 1, "cand\u00e8": [4, 5, 10], "cardin": [4, 5], "case": [2, 4, 12], "cc": [2, 12], "ccp_alpha": [4, 5], "ceil": [4, 5], "cell": [2, 12], "check": 2, "chen": [2, 4, 5, 12], "child": [4, 5], "choic": 1, "choos": 1, "chosen": [1, 4, 5], "class": [1, 2, 4, 5, 7, 8], "class_label": 4, "class_weight": 4, "classes_": 4, "classif": [4, 5, 7, 8], "classifi": [4, 10], "classification_coverage_scor": 2, "clf": [1, 2, 4, 10], "clf_b": 2, "clf_sp": 2, "cm": 1, "cmap": 1, "collect": [4, 5], "color": 12, "column": [4, 8, 12], "combin": [4, 5], "come": 2, "compar": [1, 2, 12], "compat": 10, "complex": [4, 5], "comput": [2, 4, 5, 6, 7, 8, 9, 12], "computation": 1, "concurr": [2, 12], "confid": [2, 4], "conform": [3, 4, 5, 10, 11], "conserv": 4, "consid": [4, 5, 10], "constraint": [4, 5], "constrast": 2, "construct": [2, 4], "contain": [1, 2, 4, 5, 6, 9, 12], "contain_i": 1, "context": [4, 5], "control": [2, 4, 5, 10, 12], "conveni": 12, "copa": [4, 5, 10], "core": [2, 10, 12], "correct": [6, 7, 8, 9], "cost": [4, 5], "count": [2, 12], "coverag": [1, 2, 4, 8, 9, 10, 12], "coverforest": [1, 2, 4, 5, 12], "coverforestclassifi": [1, 2, 5, 10], "coverforestclassifiercoverforestclassifi": 2, "coverforestregressor": [4, 10, 12], "coverforestregressorcoverforestregressor": 12, "cpu": [2, 10, 12], "creat": [2, 4, 5, 12], "criteria": [4, 5], "criterion": [4, 5], "cross": [1, 4, 5, 10], "curran": [2, 12], "current": [4, 5], "custom": [4, 5], "cv": [1, 3, 4, 5, 10], "data": [1, 2, 4, 5, 12], "dataset": [1, 2, 4, 5, 12], "deal": 1, "decis": [2, 4, 12], "decision_path": [4, 5], "decisiontreeclassifi": [4, 5], "decisiontreeregressor": [5, 12], "decisiontreeregressorifitteddecisiontreeregressor": 12, "decreas": [1, 2, 4, 5], "def": 12, "default": [2, 4, 5, 8, 9], "defin": [4, 5, 12], "definit": 1, "demonstr": [1, 2, 12], "depth": [4, 5], "describ": 1, "desir": 12, "devianc": 5, "deviat": [2, 12], "diabet": 12, "dict": 4, "differ": [2, 6], "digit": 1, "diseas": 12, "distribut": [4, 5, 10], "document": [0, 2, 12], "doe": [4, 5], "down": 1, "draw": [4, 5], "drawn": [4, 5], "due": 2, "dure": [1, 4, 5, 12], "e": [4, 5, 8, 9, 10], "each": [2, 4, 5, 6, 7, 8, 9, 12], "editor": [2, 12], "effect": [4, 5], "effici": 10, "emmanuel": [2, 4, 5], "empir": [2, 8, 9, 12], "empti": [2, 4], "enforc": [4, 5], "enough": 12, "ensembl": [4, 5], "entropi": 4, "environ": [2, 12], "equal": [4, 5, 8, 9], "equat": [4, 5], "equival": 5, "error": [2, 5], "especi": [2, 4, 5, 12], "essenti": 1, "estim": [2, 4, 5, 10, 12], "estimator_": [4, 5], "estimators_": [2, 4, 5, 12], "estimators_samples_": [4, 5], "et": [2, 12], "even": [4, 5, 12], "everi": 4, "exactli": [2, 4, 5], "exampl": [0, 1, 2, 4, 5, 6, 7, 8, 9, 12], "except": 4, "exchang": 2, "exist": [4, 5], "expand": [4, 5], "expens": 1, "extend": 10, "f": [1, 2, 10, 12], "fall": 9, "fals": [1, 2, 4, 5, 12], "fashion": [4, 5], "faster": 2, "fastrandomforestclassifi": [2, 4, 5], "fastrandomforestclassifierifittedfastrandomforestclassifi": 2, "fastrandomforestregressor": 5, "featur": [2, 4, 5, 12], "feature_importances_": [2, 4, 5, 12], "feature_nam": [2, 12], "feature_names_in_": [4, 5], "few": 1, "fig": [2, 12], "figsiz": [1, 2, 12], "figur": [2, 12], "file": [2, 12], "find": 5, "first": [1, 2, 4, 5, 12], "first_forest": 2, "first_tre": [2, 12], "fit": [1, 2, 4, 5, 10, 12], "float": [4, 5, 6, 7, 8, 9], "fold": [4, 5], "follow": [4, 5], "fontsiz": [2, 12], "forest": [4, 5, 10, 12], "form": 4, "found": [4, 5], "four": 4, "foygel": [4, 5], "fraction": [4, 5], "free": [2, 4, 5, 10, 12], "frequenc": 4, "friedman": 5, "friedman_ms": 5, "from": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "function": [1, 4, 5, 12], "g": 5, "gain": 4, "gammerman": [4, 5, 10], "gener": [4, 5], "get": 10, "get_feature_names_out": [2, 12], "gini": [4, 5], "github": [2, 12], "given": 4, "good": [2, 12], "gray_r": 1, "greater": [4, 5], "greater_is_bett": 1, "grid": [1, 12], "grid_search": 1, "gridsearchcv": [3, 4, 5], "ground": [6, 7, 8, 9], "grow": [4, 5], "grown": 4, "guarante": [2, 10, 12], "h": [2, 12], "ha": [1, 4, 5], "hadsel": [2, 12], "have": [1, 2, 4, 5, 12], "haven": 2, "help": 1, "here": [2, 12], "high": [2, 4, 5, 12], "higher": [2, 4, 5, 12], "highest": 1, "hold": 4, "how": [0, 1, 2, 12], "html": [2, 12], "http": [2, 12], "hyperparamet": [2, 12], "i": [0, 1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "iclr": [4, 10], "idea": 10, "idx": 1, "ilia": [4, 5], "iloc": [2, 12], "imag": [4, 10], "img_idx": 1, "imp_al": 2, "imp_mean": 2, "imp_std": 2, "implement": [4, 5, 10], "import": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "improv": [1, 5], "impur": [4, 5], "imshow": 1, "inc": [2, 12], "includ": [2, 4, 7, 8], "incorrect": 2, "increas": [2, 4, 5], "index": 1, "indic": [2, 4, 5, 7, 8, 12], "indirectli": [4, 5], "induc": [4, 5], "infer": [2, 4, 5, 10, 12], "inform": [2, 4, 12], "initi": [2, 4, 5, 12], "input": [2, 4, 5], "inspect": [4, 5], "instanc": [4, 5], "instanti": 12, "instead": [1, 4], "int": [4, 5], "integ": [1, 4, 5], "intern": [4, 5], "interpol": 1, "interv": [4, 5, 6, 9, 10], "introduc": 2, "invers": 4, "issu": 10, "its": [1, 2, 4, 12], "j": [4, 5, 10], "jackknif": [4, 5, 10, 11], "jitendra": 4, "job": [4, 5], "joblib": [4, 5], "jordan": [4, 10], "jupyt": [2, 12], "just": [4, 5], "k": [2, 3, 4, 5, 12], "k_init": [1, 2, 4], "k_star_": 4, "keep": 2, "kim": [2, 4, 5, 10, 12], "known": [4, 5], "l1": 5, "l2": 5, "label": [1, 2, 4, 6, 7, 8, 12], "labelrot": [2, 12], "lambda": [2, 3, 4, 12], "lambda_init": [1, 2, 4], "lambda_star_": 4, "larg": [2, 10, 12], "larger": 2, "largest": [1, 4, 5], "larochel": [2, 12], "lead": 2, "leaf": [4, 5], "learn": [2, 3, 4, 5, 10, 12], "least": [4, 5], "leav": [4, 5], "left": [4, 5], "left_impur": [4, 5], "legend": 12, "len": [1, 2, 12], "length": [6, 12], "leo": [4, 5], "less": [4, 5], "let": [1, 2, 12], "level": [2, 12], "leverag": [2, 12], "librari": 10, "like": [1, 2, 4, 5, 6, 7, 8, 9], "lin": [2, 12], "line": 12, "linewidth": 12, "link": 10, "list": [2, 4, 5, 6, 7, 8, 9], "ll": [1, 2, 12], "load": [1, 2, 12], "load_breast_canc": 2, "load_diabet": 12, "load_digit": 1, "log2": [4, 5], "log_loss": 4, "look": [1, 4, 5, 12], "loss": 5, "lot": 4, "lower": [2, 6, 12], "lower_bound": [6, 9], "lowest": 1, "m": [2, 10, 12], "machin": [4, 5], "mai": [4, 5], "make_classif": 4, "make_regress": 5, "make_scor": 1, "malik": [4, 10], "mani": [1, 2, 4, 5], "manokhin": [4, 5, 10], "matplotlib": [1, 2, 12], "matrix": [7, 8], "matteo": [2, 4], "max": [1, 4, 5], "max_depth": [2, 4, 5, 12], "max_featur": [4, 5, 12], "max_leaf_nod": [4, 5], "max_sampl": [4, 5], "maximum": [4, 5, 6, 7], "mean": [1, 2, 4, 5], "measur": [4, 5, 8, 9], "median": 5, "meet": 4, "memori": [2, 10, 12], "method": [1, 2, 4, 5, 10, 12], "metric": [1, 2, 4, 5, 12], "michael": 4, "might": [1, 4], "min_impurity_decreas": [4, 5], "min_samples_leaf": [4, 5], "min_samples_split": [4, 5], "min_weight_fraction_leaf": [4, 5], "minim": [4, 5], "minimum": [4, 5, 6, 7], "miscoverag": [4, 5], "mislead": [4, 5], "miss": [4, 5], "mnist": 1, "mode": 4, "model": [2, 4, 5, 12], "model_select": [1, 2, 4, 5, 12], "modif": 2, "modul": [2, 4, 5, 12], "monoton": [4, 5], "monotonic_cst": [4, 5], "more": [2, 4, 5, 12], "most": [1, 2, 12], "multi": 4, "multilabel": 4, "multioutput": 4, "multipli": 4, "n": [2, 4, 5, 10, 12], "n_class": [2, 4, 7, 8, 10, 12], "n_classes_": 4, "n_estim": [1, 2, 4, 5, 10, 12], "n_featur": [4, 5], "n_features_in_": [4, 5], "n_forests_per_fold": [4, 5], "n_inform": [4, 5], "n_job": [1, 2, 4, 5, 10, 12], "n_output": [4, 5], "n_outputs_": [4, 5], "n_redund": 4, "n_sampl": [4, 5, 6, 7, 8, 9], "n_t": [4, 5], "n_t_l": [4, 5], "n_t_r": [4, 5], "n_test": [2, 10, 12], "n_train": [2, 10, 12], "name": [2, 4, 5, 12], "nan": 4, "narrow": 1, "nbviewer": [2, 12], "ncol": 1, "ndarrai": [4, 5], "nearest": 1, "neg": [4, 5], "neural": [2, 12], "neurip": [2, 4, 5, 10, 12], "never": 4, "new": [4, 5], "nikola": 4, "node": [4, 5], "non": [4, 5], "none": [4, 5, 8, 9], "nonempti": 2, "nonetheless": [2, 12], "normal": [2, 4, 5, 12], "note": [4, 5], "notebook": [2, 12], "notic": 12, "nouretdinov": [4, 5, 10], "now": [1, 2, 12], "np": [1, 2, 4, 6, 7, 8, 9, 12], "nrow": 1, "number": [1, 2, 4, 5, 7, 12], "numpi": [1, 2, 6, 7, 8, 9, 12], "object": [4, 5], "obtain": [1, 4, 5], "offer": 10, "one": [2, 4, 5, 12], "ones": 2, "onli": [2, 4, 5, 12], "oob_decision_function_": 4, "oob_pred_": [4, 5], "oob_prediction_": 5, "oob_scor": [4, 5], "oob_score_": [4, 5], "operatornam": [2, 12], "optim": [2, 4, 10, 12], "option": [2, 4, 12], "order": [4, 8], "org": [2, 12], "other": 2, "otherwis": [4, 5], "our": [1, 2, 12], "out": [2, 4, 5], "output": [1, 2, 4, 5], "over": [1, 4, 5], "overal": 2, "own": [0, 4], "p": [4, 5], "page": [2, 12], "paper": [2, 12], "paper_fil": [2, 12], "paragraph": 1, "parallel": [2, 4, 5, 10, 12], "parallel_backend": [4, 5], "param_grid": 1, "paramet": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "particular": [1, 2], "partit": [4, 5], "pass": [4, 5], "pdf": [2, 12], "penal": 4, "perform": [1, 2, 4, 5, 12], "permutation_import": 5, "pip": 10, "pipe": 2, "pipe_b": [2, 12], "pipe_cv": 12, "pipe_sp": [2, 12], "pipelin": [3, 11], "pipelineifittedpipelin": [2, 12], "pleas": [2, 12], "plot": [1, 2, 12], "plot_predictions_with_interv": 12, "plot_tre": [2, 12], "plt": [1, 2, 12], "point": [2, 4, 5, 12], "poisson": 5, "posit": 4, "possibl": [1, 4, 5, 6, 7], "post": [2, 12], "potenti": 5, "practic": [2, 12], "pred": 2, "predict": [1, 4, 5, 6, 7, 8, 9, 10], "preprocess": [2, 12], "previou": [1, 4, 5, 12], "print": [1, 2, 4, 5, 12], "probabl": [1, 2, 4, 5, 12], "problem": [1, 4], "procedur": [4, 5], "proceed": [2, 12], "process": [2, 10, 12], "processor": [4, 5], "progress": 12, "project": 0, "proport": [2, 4, 8, 9, 12], "propos": 5, "provid": [1, 2, 4, 5, 10, 12], "prune": [4, 5], "pure": [4, 5], "pyplot": [1, 2, 12], "python": 10, "qualiti": [4, 5], "quantil": [1, 4], "quit": [2, 12], "r": [2, 10, 12], "r2_score": 5, "ramda": [5, 10], "random": [2, 4, 5, 10, 12], "random_st": [1, 2, 4, 5, 12], "randomforestclassifi": [2, 4], "randomforestregressor": [5, 12], "randomst": [4, 5], "rang": [1, 2], "rank": 1, "ranzato": [2, 12], "rate": [2, 4, 5], "recommend": 2, "red": 12, "reduct": [4, 5], "refer": [4, 5], "refit": 4, "reg": 10, "reg_b": 12, "reg_cv": 12, "reg_sp": 12, "regr": 5, "regress": [4, 5, 6, 9], "regression_coverage_scor": 12, "regressor": 5, "regular": [2, 4, 10], "rel": [4, 5], "reli": [2, 12], "remain": 2, "render": [2, 12], "repeat": 4, "repeat_params_search": 4, "repositori": 10, "represent": [2, 12], "requir": [2, 4, 5, 10, 12], "rerun": [2, 12], "resampl": [2, 4, 5, 12], "resample_n_estim": [2, 4, 5, 12], "reshap": 1, "residu": 5, "residuals_": 5, "result": [1, 2, 12], "retain": [2, 12], "return": [2, 4, 6, 7, 8, 9, 12], "return_x_i": [2, 12], "reus": [4, 5], "right": [4, 5], "right_impur": [4, 5], "rina": [2, 4, 5, 12], "riski": [2, 12], "romano": [2, 4, 5, 10], "round": [4, 5], "row": [6, 9], "run": [4, 5], "ryan": 5, "same": [2, 4, 8], "sampl": [1, 2, 4, 5, 6, 7, 8, 9, 12], "sample_weight": [4, 5, 8, 9], "scale": [10, 12], "scaler": [2, 12], "scatter": 12, "scikit": [2, 3, 4, 5, 10, 12], "score": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "sd": 2, "search": [2, 3, 4, 5, 12], "search_k_and_lambda": 1, "second": 12, "see": [1, 2, 4, 5, 12], "seen": [4, 5], "select": [4, 5], "sesia": [2, 4, 5, 10], "set": [1, 4, 5, 7, 8, 10, 12], "set_axis_off": 1, "set_siz": 1, "set_titl": 1, "set_ylabel": [2, 12], "seven": 1, "shannon": 4, "shape": [4, 5, 6, 7, 8, 9, 12], "should": [1, 2, 4, 5, 12], "show": [2, 12], "shuffl": [1, 4, 5], "signatur": [4, 5], "significantli": 5, "simpl": 10, "singl": [1, 2, 4, 12], "size": [1, 2, 7, 12], "skip": 2, "sklearn": [1, 2, 4, 5, 12], "slightli": 2, "slower": 5, "small": [2, 4, 12], "smaller": [2, 4, 5, 12], "smallest": 1, "smooth": [4, 5], "so": [1, 2, 12], "solut": [4, 5], "sort_idx": 12, "sourc": [4, 5, 6, 7, 8, 9, 10], "sparingli": [2, 4], "specif": [1, 4, 5], "specifi": [1, 2, 4, 5, 12], "split": [1, 4, 5, 10], "sqrt": [2, 4, 5, 12], "squar": 5, "squared_error": 5, "standard": [2, 4, 5, 12], "standardscal": [2, 12], "standardscalerstandardscal": [2, 12], "statist": [5, 10], "std": 2, "step": [2, 12], "stephen": 4, "stop": [4, 5], "strength": 4, "string": [4, 5], "sub": [2, 4, 5, 12], "subestim": [2, 12], "subplot": [1, 2, 12], "subsampl": [4, 5], "subset": [4, 5], "subtre": [4, 5], "suitabl": 1, "sum": [4, 5, 7], "support": [4, 5, 10], "suppos": 4, "system": [2, 12], "t": 2, "take": [1, 12], "target": [1, 2, 4, 5, 9, 12], "task": [4, 5, 10], "templat": [4, 5], "term": 1, "termin": 5, "test": [1, 2, 4, 5, 10, 12], "test_siz": [1, 2, 12], "text": [2, 12], "than": [2, 4, 5, 12], "thei": [2, 12], "theori": 12, "thi": [0, 1, 2, 4, 5, 12], "though": 12, "three": [4, 5, 10], "threshold": 4, "through": [1, 4], "thu": [1, 4, 5], "tibshirani": [5, 10], "tick_param": [2, 12], "tight_layout": 12, "time": [1, 2], "top": 1, "total": [1, 4, 5], "track": 2, "train": [1, 2, 4, 5, 12], "train_giqs_": 4, "train_test_split": [1, 2, 12], "tree": [2, 4, 5], "tree_mathematical_formul": 4, "true": [1, 2, 4, 5, 8, 9, 12], "trust": [2, 12], "truth": [6, 7, 8, 9], "try": [2, 4, 12], "tupl": [6, 7, 8, 9], "tutori": [1, 2], "two": [2, 12], "type": [4, 5, 6, 7, 8, 9], "unabl": [2, 12], "uncertain": 2, "uncertainti": [4, 10], "uniqu": [4, 5], "unless": [4, 5], "unlimit": [4, 5], "until": [2, 4, 5], "up": 1, "upper": [1, 6, 12], "upper_bound": [6, 9], "url": [2, 12], "us": [3, 4, 5, 10, 11], "usag": [2, 10, 12], "user": [4, 5], "v": 10, "valeri": [4, 5], "valid": [1, 2, 4, 5, 10], "valu": [1, 2, 4, 5, 6, 7, 8, 9, 12], "variabl": 2, "varianc": 5, "variat": 2, "verbos": [2, 4, 5], "vertic": 12, "via": [4, 5], "visual": [2, 12], "vladimir": [4, 5], "vline": 12, "volum": [2, 12], "vovk": [4, 5, 10], "wa": [4, 5], "wai": 10, "want": 1, "warm_start": [4, 5], "warn": [4, 5], "we": [1, 2, 12], "weight": [4, 5, 8, 9], "well": 12, "when": [1, 2, 4, 5, 10, 12], "whenev": [4, 5], "where": [2, 4, 5, 6, 7, 8, 9, 12], "whether": [2, 4, 5], "which": [1, 2, 4, 5, 12], "while": 1, "whole": [4, 5], "whose": 1, "wide": 12, "within": [1, 9], "worst": [8, 9], "would": 1, "x": [2, 4, 5, 12], "x27": [2, 12], "x_test": [1, 2, 10, 12], "x_train": [1, 2, 10, 12], "xu": [2, 4, 5, 10, 12], "y": [1, 2, 4, 5, 10, 12], "y_b_interv": 12, "y_b_pred": [2, 12], "y_b_set": 2, "y_cv_interv": 12, "y_cv_pred": 12, "y_interv": [10, 12], "y_pred": [1, 2, 4, 5, 6, 7, 8, 9, 10, 12], "y_set": [1, 2, 10], "y_sp_interv": 12, "y_sp_pred": [2, 12], "y_sp_set": 2, "y_test": [1, 2, 12], "y_train": [1, 2, 10, 12], "y_true": [4, 5, 6, 7, 8, 9], "yaniv": [2, 4], "yerr": 2, "yield": [1, 2, 4, 12], "ylabel": 12, "you": 10, "your": 0, "zip": 1, "zorder": 12}, "titles": ["API Reference", "Searching <span class=\"math notranslate nohighlight\">\\(k\\)</span> and <span class=\"math notranslate nohighlight\">\\(\\lambda\\)</span> using scikit-learn\u2019s <code class=\"docutils literal notranslate\"><span class=\"pre\">GridSearchCV</span></code>", "Conformal classification using CV+ in a <code class=\"docutils literal notranslate\"><span class=\"pre\">Pipeline</span></code>", "Classification Examples", "CoverForestClassifier", "CoverForestRegressor", "coverforest.metrics.average_interval_length_loss", "coverforest.metrics.average_set_size_loss", "coverforest.metrics.classification_coverage_score", "coverforest.metrics.regression_coverage_score", "coverforest", "Regression Examples", "Conformal regression using Jackknife+-after-bootstrap in a <code class=\"docutils literal notranslate\"><span class=\"pre\">Pipeline</span></code>"], "titleterms": {"": 1, "after": [2, 12], "api": 0, "average_interval_length_loss": 6, "average_set_size_loss": 7, "between": 1, "bootstrap": [2, 12], "classif": [2, 3, 10], "classifi": 0, "classification_coverage_scor": 8, "comparison": [1, 2, 12], "conform": [2, 12], "coverforest": [6, 7, 8, 9, 10], "coverforestclassifi": 4, "coverforestregressor": 5, "cv": [2, 12], "difficult": 1, "evalu": [2, 12], "exampl": [3, 10, 11], "featur": 10, "final": [2, 12], "forest": 2, "gridsearchcv": 1, "imag": 1, "individu": [2, 12], "inspect": [1, 2, 12], "instal": 10, "interv": 12, "jackknif": [2, 12], "k": 1, "kei": 10, "lambda": 1, "learn": 1, "limit": 1, "make": [2, 12], "metric": [0, 6, 7, 8, 9], "model": 1, "note": [2, 12], "perform": 10, "pipelin": [2, 12], "predict": [2, 12], "quick": 10, "refer": [0, 10], "regress": [10, 11, 12], "regression_coverage_scor": 9, "regressor": 0, "regular": 1, "scikit": 1, "search": 1, "set": 2, "space": 1, "split": [2, 12], "start": 10, "tip": 10, "tree": 12, "us": [1, 2, 12], "without": 1}})
